trigger:
  batch: true
  branches:
    include:
      - master
      - stage
      - release/*
      - develop
      - hotfix/*
      #- feature/*   
 
variables:
  - group: Variables-CICD_IaC
  - name: vmImageName
    value: 'ubuntu-latest'
  - name: ContainerRegistryName
    value: 'crdesacontainer'
  - name: DockerRepository
    value: 'desa/admision_digital/achs-fr-admision'
  - name: ImageTag
    value: '_$(Build.BuildId)'
  - name: urlOrquestadorDesa 
    value: 'wa-desa-msorquestador'
  - name: urlOrquestadorQA 
    value: 'https://wa-qa-admisiondigital-msorquestador.azurewebsites.net'
  - name: urlOrquestadorSTG 
    value: 'https://wa-stg-admdig-msorquestador.azurewebsites.net'
  - name: appNameSTG 
    value: 'wa-stg-admdig-front-admision'
  - name: azureSubcritionSTG 
    value: 'ASC-STG-ADMISIONDIGITAL'
  - name: appNameQA 
    value: 'wa-qa-admisiondigital-front-admision'
  - name: azureSubcritionQA 
    value: 'ASC-QA-ADMISIONDIGITAL'
  - name: appNameDESA 
    value: 'wa-desa-admdig-front-admision'
  - name: azureSubcritionDESA 
    value: 'ASC-DESA-ADMISIONDIGITAL'

pool:
    vmImage: $(vmImageName)

stages: 
  - stage: INFO
    displayName: 'Building'
    jobs:
    - deployment: Info
      displayName: 'Info'
      environment: 'Info' 
    - job: Build
      displayName: 'Info' 
      steps:
        - script: |
            echo "TargetBranch" $(System.PullRequest.TargetBranch)
            echo "sourceBranch " $(System.pullRequest.sourceBranch)
  # STAGE
  - stage: Deploy_DESA
    displayName: 'Building Desploy DESA'
    condition: |
     and(
       startsWith(variables['system.pullRequest.sourceBranch'], 'refs/heads/feature'),
       eq(variables['Build.Reason'], 'PullRequest')
     )  
    jobs:
    - deployment: Deploy
      displayName: 'Deploy DESA'
      environment: 'Deploy_DESA' 
    - job: Build
      displayName: 'Deploy_DESA' 
      steps:
         - task: Docker@2
           displayName: Build Docker Image
           inputs:
             containerRegistry: $(ContainerRegistryName)
             repository: $(DockerRepository)
             command: build
             Dockerfile: ./Dockerfile 
             tags: $(ImageTag)   
             arguments: --build-arg urlOrquestador=$(urlOrquestadorDesa)
         - task: Docker@2
           displayName: Push Docker Image
           inputs:
             containerRegistry: $(ContainerRegistryName)
             repository: $(DockerRepository)
             command: push
             tags: $(ImageTag)                    
         - task: AzureWebAppContainer@1
           inputs:
             azureSubscription: $(azureSubcritionDESA)
             appName: $(appNameDESA)
             containers: $(ContainerRegistryName).azurecr.io/$(DockerRepository):$(ImageTag)
  - stage: Deploy_QA
    displayName: 'Building Deploy QA'
    condition: |
       and(
         startsWith(variables['system.pullRequest.sourceBranch'], 'refs/heads/develop'),
         eq(variables['Build.Reason'], 'PullRequest')
        ) 
    jobs:
    - deployment: Deploy
      displayName: 'Deploy QA'
      environment: 'Deploy_QA'
    - job: Build
      displayName: 'Deploy QA'
      steps:
         - task: Docker@2
           displayName: Build Docker Image
           inputs:
             containerRegistry: $(ContainerRegistryName)
             repository: $(DockerRepository)
             command: build
             Dockerfile: ./Dockerfile 
             tags: $(ImageTag)   
             arguments: --build-arg urlOrquestador=$(urlOrquestadorQA)
         - task: Docker@2
           displayName: Push Docker Image
           inputs:
             containerRegistry: $(ContainerRegistryName)
             repository: $(DockerRepository)
             command: push
             tags: $(ImageTag)                    
         - task: AzureWebAppContainer@1
           inputs:
             azureSubscription: $(azureSubcritionQA) 
             appName: $(appNameQA) 
             containers: $(ContainerRegistryName).azurecr.io/$(DockerRepository):$(ImageTag) 
  - stage: Deploy_STG
    displayName: 'Building Deploy STG'
    condition: |
       and(
         startsWith(variables['system.pullRequest.sourceBranch'], 'refs/heads/release'),
         eq(variables['Build.Reason'], 'PullRequest')
       )    
    jobs:
    - deployment: Deploy
      displayName: 'Deploy STG'
      environment: 'Deploy_STG'
    - job: Build
      displayName: 'Deploy STG'
      steps:
         - task: Docker@2
           displayName: Build Docker Image
           inputs:
             containerRegistry: $(ContainerRegistryName)
             repository: $(DockerRepository)
             command: build
             Dockerfile: ./Dockerfile 
             tags: $(ImageTag)   
             arguments: --build-arg urlOrquestador=$(urlOrquestadorSTG)
         - task: Docker@2
           displayName: Push Docker Image
           inputs:
             containerRegistry: $(ContainerRegistryName)
             repository: $(DockerRepository)
             command: push
             tags: $(ImageTag)                    
         - task: AzureWebAppContainer@1
           inputs:
             azureSubscription: $(azureSubcritionSTG)
             appName: $(appNameSTG)
             containers: $(ContainerRegistryName).azurecr.io/$(DockerRepository):$(ImageTag)            
